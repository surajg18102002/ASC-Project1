---
- name: Scan Confluence Repository and Upload to KTAuto
  hosts: localhost
  gather_facts: no
  vars:
    confluence_url: "https://surajg18102002.atlassian.net/wiki"
    confluence_token: "Basic c3VyYWpnMTgxMDIwMDJAZ21haWwuY29tOkFUQVRUM3hGZkdGMFBPcFZmaXVRNW5oUkFuM0pSSDhxQ0pCYnFZYnRkYlJMeVlNYjB6bEw4R0NiZXVuT01JMjdSREdaLUpuR19jbno0cG5qX05BRjdIcU9zUk9JSUdCclMyWWRHSU5CaDFEQ2c5Z2ZaVWJacVoyWnpURjY5azl4MjlWRHFaNGltUkJmTmg1ZTBIbWYzSV9NWDhCQmlQelVTRTBHQjJWaURldjFVZ2dxbHhBN3VsUT1GRThCN0VCRQ==
"
    source_space_key: "~7120205150328a89ad45d19d97b210d7049150"
    destination_space_key: "KTAuto"
    destination_space_name: "KTAuto Space"
  
  tasks:
    - name: Fetch all pages in the 'Suraj Gowda' space
      ansible.builtin.uri:
        url: "{{ confluence_url }}/rest/api/content?spaceKey={{ source_space_key }}&type=page&limit=100"
        method: GET
        headers:
          Authorization: "{{ confluence_token }}"
          Accept: "application/json"
        status_code: [200, 401, 403]
      register: fetched_pages

    - name: Debug API Response (Check if fetch is successful)
      debug:
        var: fetched_pages.json

    - name: Fail if unauthorized
      fail:
        msg: "Authentication failed. Check API token."
      when: fetched_pages.status == 401

    - name: Extract page titles and IDs
      set_fact:
        pages: "{{ fetched_pages.json.results | default([]) | map(attribute='id') | list }}"

    - name: Check if 'KTAuto' space exists
      ansible.builtin.uri:
        url: "{{ confluence_url }}/rest/api/space?spaceKey={{ destination_space_key }}"
        method: GET
        headers:
          Authorization: "{{ confluence_token }}"
          Accept: "application/json"
        status_code: [200, 404]
      register: check_space

    - name: Debug API Response (Check Space)
      debug:
        var: check_space.json

    - name: Create 'KTAuto' space if it does not exist
      ansible.builtin.uri:
        url: "{{ confluence_url }}/rest/api/space"
        method: POST
        headers:
          Authorization: "{{ confluence_token }}"
          Accept: "application/json"
          Content-Type: "application/json"
        body_format: json
        body:
          key: "{{ destination_space_key }}"
          name: "{{ destination_space_name }}"
          description:
            plain:
              value: "Automated knowledge transfer space for SOPs and Troubleshooting Guides"
              representation: "plain"
        status_code: [200, 201]
      when: check_space.json is not defined or check_space.json.results | default([]) | length == 0

    - name: Categorize documents into SOPs and Troubleshooting Guides
      set_fact:
        categorized_pages:
          SOPs: "{{ pages | select('search', 'SOP') | list }}"
          Troubleshooting_Guides: "{{ pages | select('search', 'Troubleshooting') | list }}"

    - name: Debug Categorized Pages
      debug:
        var: categorized_pages

    - name: Upload categorized pages to 'KTAuto'
      ansible.builtin.uri:
        url: "{{ confluence_url }}/rest/api/content"
        method: POST
        headers:
          Authorization: "{{ confluence_token }}"
          Accept: "application/json"
          Content-Type: "application/json"
        body_format: j
