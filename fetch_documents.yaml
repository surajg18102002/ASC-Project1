- name: Scan Confluence Repository and Upload to KTSURAJ
  hosts: localhost
  gather_facts: no
  vars:
    confluence_url: "https://surajg18102002.atlassian.net/wiki"
    confluence_token: "c3VyYWpnMTgxMDIwMDJAZ21haWwuY29tOkFUQVRUM3hGZkdGMGxLM0ItRzNXUXVTZF9FeVVud29qTFFkNXVvUG5lVmJnLWlYWlM0NXBIUm9fcDNVZ2RSQXdKWF95ZkxZV1FfUUFjdEZpY3VTel9jMWt2ODVTQjhXaUFQVktQcmVRMElRUWhnbTV5Mkt2bGlTQTdWZV9YR1dpVUx6NTlMSE9SekRCczcwOUFTRUcxc2VLVXA5a1JDXzdTZ3Z4VDAxR3p3NFp4SFZHZWUxOTZEUT1GNzM3NDMwOQ=="
    new_space_key: "KTSURAJ"
    new_space_name: "KT Suraj"
    metadata_file: "/tmp/confluence_metadata.json"

  tasks:
    - name: Check if KTSURAJ space exists
      ansible.builtin.uri:
        url: "{{ confluence_url }}/rest/api/space?spaceKey={{ new_space_key }}"
        method: GET
        headers:
          Authorization: "Basic {{ confluence_token }}"
          Accept: "application/json"
        status_code: [200, 404]
      register: check_space

    - name: Create KTSURAJ space if it does not exist
      ansible.builtin.uri:
        url: "{{ confluence_url }}/rest/api/space"
        method: POST
        headers:
          Authorization: "Basic {{ confluence_token }}"
          Accept: "application/json"
          Content-Type: "application/json"
        body_format: json
        body:
          key: "{{ new_space_key }}"
          name: "{{ new_space_name }}"
          description:
            plain:
              value: "Automated knowledge transfer space for Suraj"
              representation: "plain"
        status_code: [200, 201]
      when: check_space.json.size == 0

    - name: Fetch all spaces from Confluence
      ansible.builtin.uri:
        url: "{{ confluence_url }}/rest/api/space?limit=100"
        method: GET
        headers:
          Authorization: "Basic {{ confluence_token }}"
          Accept: "application/json"
        status_code: [200]
      register: spaces_data

    - name: Fetch all pages from all spaces
      ansible.builtin.uri:
        url: "{{ confluence_url }}/rest/api/content?type=page&limit=100"
        method: GET
        headers:
          Authorization: "Basic {{ confluence_token }}"
          Accept: "application/json"
        status_code: [200]
      register: pages_data

    - name: Fetch all attachments from all spaces
      ansible.builtin.uri:
        url: "{{ confluence_url }}/rest/api/content?type=attachment&limit=100"
        method: GET
        headers:
          Authorization: "Basic {{ confluence_token }}"
          Accept: "application/json"
        status_code: [200]
      register: attachments_data

    - name: Fetch all comments from all spaces
      ansible.builtin.uri:
        url: "{{ confluence_url }}/rest/api/content?type=comment&limit=100"
        method: GET
        headers:
          Authorization: "Basic {{ confluence_token }}"
          Accept: "application/json"
        status_code: [200]
      register: comments_data

    - name: Store extracted metadata in JSON format
      copy:
        content: |
          {
            "spaces": {{ spaces_data.json | to_nice_json }},
            "pages": {{ pages_data.json | to_nice_json }},
            "attachments": {{ attachments_data.json | to_nice_json }},
            "comments": {{ comments_data.json | to_nice_json }}
          }
        dest: "{{ metadata_file }}"

    - name: Upload extracted pages to KTSURAJ space
      ansible.builtin.uri:
        url: "{{ confluence_url }}/rest/api/content"
        method: POST
        headers:
          Authorization: "Basic {{ confluence_token }}"
          Accept: "application/json"
          Content-Type: "application/json"
        body_format: json
        body: 
          type: "page"
          title: "Migrated Page - {{ item.title }}"
          space: 
            key: "{{ new_space_key }}"
          body: 
            storage: 
              value: "{{ item.body.storage.value }}"
              representation: "storage"
        status_code: [200, 201]
      loop: "{{ pages_data.json.results }}"
      when: pages_data.json.size > 0

    - name: Upload extracted attachments to KTSURAJ space
      ansible.builtin.uri:
        url: "{{ confluence_url }}/rest/api/content/{{ new_space_key }}/child/attachment"
        method: POST
        headers:
          Authorization: "Basic {{ confluence_token }}"
          Accept: "application/json"
          X-Atlassian-Token: "no-check"
        body_format: json
        body:
          file: "{{ item._links.download }}"
        status_code: [200, 201]
      loop: "{{ attachments_data.json.results }}"
      when: attachments_data.json.size > 0

    - name: Upload extracted comments to KTSURAJ space
      ansible.builtin.uri:
        url: "{{ confluence_url }}/rest/api/content"
        method: POST
        headers:
          Authorization: "Basic {{ confluence_token }}"
          Accept: "application/json"
          Content-Type: "application/json"
        body_format: json
        body: 
          type: "comment"
          container: 
            id: "{{ new_space_key }}"
          body: 
            storage: 
              value: "{{ item.body.storage.value }}"
              representation: "storage"
        status_code: [200, 201]
      loop: "{{ comments_data.json.results }}"
      when: comments_data.json.size > 0
