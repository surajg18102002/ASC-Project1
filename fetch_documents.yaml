- name: Scan Confluence Repository and Upload to KT Automation
  hosts: localhost
  gather_facts: no
  vars:
    confluence_url: "https://surajg18102002.atlassian.net/wiki"
    confluence_token: "c3VyYWpnMTgxMDIwMDJAZ21haWwuY29tOkFUQVRUM3hGZkdGMGxLM0ItRzNXUXVTZF9FeVVud29qTFFkNXVvUG5lVmJnLWlYWlM0NXBIUm9fcDNVZ2RSQXdKWF95ZkxZV1FfUUFjdEZpY3VTel9jMWt2ODVTQjhXaUFQVktQcmVRMElRUWhnbTV5Mkt2bGlTQTdWZV9YR1dpVUx6NTlMSE9SekRCczcwOUFTRUcxc2VLVXA5a1JDXzdTZ3Z4VDAxR3p3NFp4SFZHZWUxOTZEUT1GNzM3NDMwOQ=="
    output_dir: "/tmp/confluence_repository"
    new_space_key: "KTAUTOMATION"  # FIXED (No underscores)
    new_space_name: "KT Automation"

  tasks:
    - name: Ensure output directory exists
      ansible.builtin.file:
        path: "{{ output_dir }}"
        state: directory
        mode: '0755'

    - name: Check if KT Automation space exists
      ansible.builtin.uri:
        url: "{{ confluence_url }}/rest/api/space?spaceKey={{ new_space_key }}"
        method: GET
        headers:
          Authorization: "Basic {{ confluence_token }}"
          Accept: "application/json"
        status_code: [200, 404]
      register: check_space

    - name: Create KT Automation space if it does not exist
      ansible.builtin.uri:
        url: "{{ confluence_url }}/rest/api/space"
        method: POST
        headers:
          Authorization: "Basic {{ confluence_token }}"
          Accept: "application/json"
          Content-Type: "application/json"
        body_format: json
        body:
          key: "{{ new_space_key }}"
          name: "{{ new_space_name }}"
          description:
            plain:
              value: "Automated knowledge transfer space"
              representation: "plain"
        status_code: 200
      when: check_space.status == 404
